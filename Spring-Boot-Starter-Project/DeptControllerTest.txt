//package com.SnowFuzzyFlake.SpringBootStarterProject.Controller;
//
//import com.SnowFuzzyFlake.SpringBootStarterProject.entity.Department;
import com.SnowFuzzyFlake.SpringBootStarterProject.error.DepartmentNotFoundException;
//import com.SnowFuzzyFlake.SpringBootStarterProject.service.DepartmentService;
//import org.junit.jupiter.api.BeforeEach;
//import org.junit.jupiter.api.Test;
//import org.mockito.Mockito;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
//import org.springframework.boot.test.mock.mockito.MockBean;
//import org.springframework.http.MediaType;
//import org.springframework.test.web.servlet.MockMvc;
//import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
//import org.springframework.test.web.servlet.result.MockMvcResultMatchers;

import static org.junit.jupiter.api.Assertions.*;
//import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
//import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;

//@WebMvcTest(DepartmentController.class)
//class DepartmentControllerTest {

    //@Autowired
    //private MockMvc mockMvc;

   // @MockBean
    //private DepartmentService departmentService;

    //private Department department;

    //@BeforeEach
    //void setUp() {
        //department = Department.builder()
               // .departmentAddress("Dhaka")
              //  .departmentName("CSE")
              //  .departmentCode("CSE - 18")
               // .departmentId(1L)
                //.build();
   // }
   // @Test
    //void saveDepartment() throws Exception {
       // Department inputDepartment = Department.builder()
               // .departmentAddress("Dhaka")
               // .departmentName("CSE")
              //  .departmentCode("CSE - 18")
              //  .build();

       // Mockito.when(departmentService.saveDepartment(inputDepartment))
              //  .thenReturn(department);

       // mockMvc.perform(post("/departments").contentType(MediaType.APPLICATION_JSON).content("{\n" +
               // "    \"departmentName\":\"ARCH\",\n" +
              //  "    \"departmentAddress\":\"Sylhet\",\n" +
              //  "    \"departmentCode\":\"ARCH-18\"\n" +
              //  "}")).andExpect(status().isOk());
   // }

    //@Test
    //void getDepartmentById() throws Exception {
        //Mockito.when(departmentService.getDepartmentById(1L)).thenReturn(department);

       // mockMvc.perform(get("/departments/107")
              // .contentType(MediaType.APPLICATION_JSON))
               // .andExpect(status().isOk())
               // .andExpect(jsonPath("$.departmentName")
                        //.value(department.getDepartmentName()));

    //}
//}